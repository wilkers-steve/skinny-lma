---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kibana
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kibana
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kibana
subjects:
  - kind: ServiceAccount
    name: kibana
    namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kibana
  namespace: monitoring
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
    resources:
      - services
      - endpoints
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
  labels:
    k8s-app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana
  template:
    metadata:
      labels:
        k8s-app: kibana
    spec:
      serviceAccount: kibana
      initContainers:
        - name: init
          image: "quay.io/stackanetes/kubernetes-entrypoint:v0.3.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: "monitoring:elasticsearch"
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: COMMAND
              value: "echo done"
          command:
            - kubernetes-entrypoint
          volumeMounts:
            []
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:6.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5601
          readinessProbe:
            httpGet:
              path: /status
              port: 5601
            initialDelaySeconds: 20
            periodSeconds: 10
          env:
            - name: ELASTICSEARCH_URL
              value: "http://elasticsearch.monitoring.svc.cluster.local:9200/"
          volumeMounts:
            - name: kibana-config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
              readOnly: true
      volumes:
        - name: kibana-config
          configMap:
            name: kibana-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: monitoring
data:
  kibana.yml: |
    xpack:
      security:
        enabled: false
    elasticsearch:
      pingTimeout: 1500
      preserveHost: true
      requestTimeout: 30000
      shardTimeout: 0
      startupTimeout: 5000
    kibana:
      defaultAppId: discover
      index: .kibana
    logging:
      quiet: false
      silent: false
      verbose: false
    ops:
      interval: 5000
    server:
      host: 0.0.0.0
      maxPayloadBytes: 1048576
      port: 5601
      ssl:
        enabled: false
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: monitoring
  labels:
    k8s-app: kibana
spec:
  selector:
    k8s-app: kibana
  ports:
  - name: http
    port: 5601
    nodePort: 30905
  type: NodePort
