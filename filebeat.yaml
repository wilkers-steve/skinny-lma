apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: filebeat
  namespace: monitoring
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
      - pods
      - services
      - endpoints
      - replicationcontrollers
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: monitoring
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      initContainers:
        - name: init
          image: "quay.io/stackanetes/kubernetes-entrypoint:v0.3.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: "monitoring:kibana"
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: COMMAND
              value: "echo done"
          command:
            - kubernetes-entrypoint
          volumeMounts:
            []
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:6.5.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          args:
            - "-e"
          ports:
            - name: filebeat
              containerPort: 5066
          env:
            - name: ELASTICSEARCH_HOST
              value: "elasticsearch.monitoring.svc.cluster.local"
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: KIBANA_HOST
              value: "kibana.monitoring.svc.cluster.local"
            - name: KIBANA_PORT
              value: "5601"
          volumeMounts:
            - name: data
              mountPath: /usr/share/filebeat/data
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: filebeat-config
          configMap:
            name: filebeat-config
        - name: data
          hostPath:
            path: /var/lib/filebeat
            type: DirectoryOrCreate
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: monitoring
data:
  filebeat.yml: |
    setup:
      dashboards:
        enabled: true
        index: "filebeat-*"
        retry:
          enabled: true
          interval: 5
      kibana:
        host: "${KIBANA_HOST}:${KIBANA_PORT}"
    path:
      logs: /var/log/
    output:
      elasticsearch:
        hosts: ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
    filebeat:
      inputs:
        - type: log
          paths:
            - /var/log/syslog
          fields:
            input: syslog
        - type: log
          paths:
            - /var/log/kern.log
          fields:
            input: "kern.log"
      config:
        prospectors:
          path: ${path.config}/prospectors.d/*.yml
          reload:
            enabled: false
        modules:
          path: ${path.config}/modules.d/*.yml
          reload:
            enabled: false
      autodiscover:
        providers:
          - type: kubernetes
            templates:
              - condition:
                  equals:
                    kubernetes.namespace: kube-system
                config:
                  - type: docker
                    containers.ids:
                      - "${data.kubernetes.container.id}"
                    exclude_lines: ["^\\s+[\\-`('.|_]"]
              - condition:
                  equals:
                    kubernetes.namespace: monitoring
                config:
                  - type: docker
                    containers.ids:
                      - "${data.kubernetes.container.id}"
                    exclude_lines: ["^\\s+[\\-`('.|_]"]
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
        - drop_event:
            when:
              equals:
                kubernetes:
                  container:
                    name: "filebeat"
